enum Efl.Text_Bidirectional_Type {
   [[Bidirectionaltext type]]
   natural = 0, [[Natural text type, same as neutral]]
   neutral = 0, [[Neutral text type, same as natural]]
   ltr, [[Left to right text type]]
   rtl, [[Right to left text type]]
   /* TIZEN_ONLY(20170216): add EVAS_BIDI_DIRECTION_ANY_RTL for evas_object_paragraph_direction_set API
   inherit [[Inherit text type]]
    */
   inherit, [[Inherit text type]]
   any_rtl [[\@internal EVAS_BIDI_DIRECTION_ANY_RTL is not made for public.
             It should be opened to public when it is accepted to EFL upstream.]]
   /* END */
}

struct Efl.Ui.Text_Change_Info {
   [[This structure includes all the information about content changes.

     It's meant to be used to implement undo/redo.
   ]]
   content: string; [[The content added/removed]]
   position: size; [[The position where it was added/removed]]
   length: size; [[The length of content in characters (not bytes, actual unicode characters)]]
   insert: bool; [[$true if the content was inserted, $false if removei]]
   merge: bool; [[$true if can be merged with the previous one. Used for example with insertion when something is already selected]]
}

type @extern Efl.Text_Annotate_Annotation: __undefined_type; [[EFL text annotations data structure]]

type @extern Efl.Text_Cursor_Cursor: __undefined_type; [[Text cursor data structure]]

