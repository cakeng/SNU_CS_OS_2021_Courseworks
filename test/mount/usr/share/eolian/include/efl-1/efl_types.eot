
struct @extern Efl.Time
{
   [[This type is a alias for struct tm.
     It is intended to be a standard way to reference
     it in .eo files.

     @since 1.18
   ]]

   tm_sec: int;	  [[Seconds.	[0-60] (1 leap second)]]
   tm_min: int;	  [[Minutes.	[0-59] ]]
   tm_hour: int;  [[Hours.	[0-23] ]]
   tm_mday: int;  [[Day.		[1-31] ]]
   tm_mon: int;	  [[Month.	[0-11] ]]
   tm_year: int;  [[Year	- 1900.]]
   tm_wday: int;  [[Day of week.	[0-6] ]]
   tm_yday: int;  [[Days in year.[0-365] ]]
   tm_isdst: int; [[DST. [-1/0/1] ]]
}

struct Efl.Version
{
   [[This type describes the version of EFL with an optional variant.

     This may be used to query the current running version of EFL. Or it can
     be passed by applications at startup time to inform EFL of the version
     a certain application was built for.

     @since 1.18
   ]]

   major: int; [[Major component of the version (>= 1).]]
   minor: int; [[Minor component of the version (>= 0).]]
   micro: int; [[Micro component of the version (>= 0).]]
   revision: int; [[Revision component of the version (>= 0).]]
   flavor: string; [[Special version string for this build of EFL, $null for
                     vanilla (upstream) EFL. Contains $EFL_VERSION_FLAVOR.]]
   build_id: string; [[Contains $EFL_BUILD_ID.]]
}

struct Efl.Observable_Tuple
{
   [[This type describes an observable touple]]
   key: string; [[Touple key]]
   data: iterator<Efl.Observer> @owned; [[Touple data]]
}
